services:
  db:
    container_name: db
    image: oscarfonts/h2:latest
    restart: always
    ports:
      - 1521:1521 # TCP 포트 : 데이터베이스 연결 포트
      - 8081:81 # HTTP 포트 : 웹콘솔 연결 포트
    environment:
      H2_OPTIONS: -ifNotExists
    networks:
      - local-springboot-mysql-net
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - local-springboot-mysql-net
  springboot:
    build:
      context: ./
      dockerfile: Dockerfile-dev
    env_file:
      - .env  # .env 파일을 로드
    restart: always
    depends_on:
      - db
      - redis
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:h2:tcp://db:1521/bookstore
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.H2Dialect
    networks:
      - local-springboot-mysql-net
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - local-springboot-mysql-net
      - monitoring
  grafana:
    image: grafana/grafana
    ports:
        - "3000:3000"
    networks:
        - monitoring
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin


networks:
  local-springboot-mysql-net:
    driver: bridge
  monitoring:
